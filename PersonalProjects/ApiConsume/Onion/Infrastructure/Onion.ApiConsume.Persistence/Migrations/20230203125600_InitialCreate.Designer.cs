// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Onion.ApiConsume.Persistence.Context;

#nullable disable

namespace Onion.ApiConsume.Persistence.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20230203125600_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Onion.ApiConsume.Domain.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Defination")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Defination = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Defination = "member"
                        });
                });

            modelBuilder.Entity("Onion.ApiConsume.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AppRoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.ToTable("AppUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppRoleId = 1,
                            Password = "1",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            AppRoleId = 2,
                            Password = "1",
                            UserName = "member"
                        });
                });

            modelBuilder.Entity("Onion.ApiConsume.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Defination")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Defination = "Clothes"
                        },
                        new
                        {
                            Id = 2,
                            Defination = "Electronic"
                        });
                });

            modelBuilder.Entity("Onion.ApiConsume.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Skirt",
                            Price = 500m,
                            Stock = 852
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Jean",
                            Price = 650m,
                            Stock = 1000
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "MacbookPro",
                            Price = 46500m,
                            Stock = 200
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "IMac",
                            Price = 32650m,
                            Stock = 150
                        });
                });

            modelBuilder.Entity("Onion.ApiConsume.Domain.Entities.AppUser", b =>
                {
                    b.HasOne("Onion.ApiConsume.Domain.Entities.AppRole", "AppRole")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AppRole");
                });

            modelBuilder.Entity("Onion.ApiConsume.Domain.Entities.Product", b =>
                {
                    b.HasOne("Onion.ApiConsume.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Onion.ApiConsume.Domain.Entities.AppRole", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("Onion.ApiConsume.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}

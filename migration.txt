MIGRATION WITH dotnet ef command , you can easly use with visual studo code

Dowloand DotnetCLI Tool
dotnet tool install --global dotnet-ef
dotnet tool install --global dotnet-ef --version 6.* 

STEP-1) 
**** WebAPI klasöründe yazılacak
dotnet ef migrations add InitialCreate --project ../DataAccessLayer --context Context
**** ROOT da yazılacak
dotnet ef migrations add InitialCreate --startup-project ../WebAPI --project ../DataAccessLayer -c Context
dotnet ef migrations add "InitialCreate" --startup-project Presentation/Onion.ApiConsume.API --project Infrastructure/Onion.ApiConsume.Persistence --output-dir "Migrations"
***********************************************************************************************************
dotnet ef migrations add "InitialCreate" --startup-project Presentation/Onion.ApiConsume.API --project Infrastructure/Onion.ApiConsume.Persistence -c BaseContext


STEP-2)  
**** WebAPI klasöründe yazılacak
dotnet ef database update --project Infrastructure/Onion.ApiConsume.Persistence -c BaseContext

**** ROOT da yazılacak
dotnet ef database update  --startup-project Presentation/Onion.ApiConsume.API  --project Infrastructure/Onion.ApiConsume.Persistence -c BaseContext

dotnet ef migrations script AddAttributeClassDescription --startup-project DynamicWebProject.WebAPI --project DynamicWebProject.DataAccessLayer

dotnet ef migrations script AddAttributeClassDescription --startup-project DynamicWebProject.WebAPI --project DynamicWebProject.DataAccessLayer out-file --output ./script.sql

PUBLISH WITH EF COMMAND, YOU CAN EASLY USE WITH VISUAL STUDIO code


STEP-1) 
dotnet publish "DynamicWebProject.WebAPI" -d release  -o D:\Publish\DynamicWebApp

REMOVE MIGRATION
dotnet ef migrations remove  --startup-project DynamicWebProject.WebAPI --project DynamicWebProject.DataAccessLayer